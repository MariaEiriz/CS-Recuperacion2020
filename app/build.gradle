apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.kt3k.coveralls'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.tetris"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    github {
        baseUrl = 'https://api.github.com'
        owner = 'MariaEiriz'
        repo = 'CS-Recuperacion2020'
        token = '1da564dbec28300b684445e818b540092d8bef85'
        tagName = '0.1.0'
        name = 'v0.1.0'
        body = 'APK'
        assets = ['app/build/outputs/apk/release']
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                def appName = "Tetris"
                outputFileName = appName+"-${variant.versionName}.apk"
            }
        }
    }
    sourceSets {
        androidTest {
            assets.srcDirs = ['src/androidTest/assets/features']
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //implementation 'com.android.support:appcompat-v7:28.0.0'
    //noinspection GradleCompatible,GradleCompatible
    implementation 'com.android.support:support-v4:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.40"

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'io.cucumber:cucumber-jvm:4.3.0'
    testImplementation 'io.cucumber:cucumber-java:4.3.0'
    testImplementation 'io.cucumber:cucumber-junit:4.3.0'
    testImplementation 'org.mockito:mockito-core:2.5.5'

    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
}
coveralls {
    jacocoReportPath = "${buildDir}/reports/coverage/debug/report.xml"
}

tasks.coveralls {
    dependsOn 'createDebugCoverageReport'
    onlyIf { System.env.'CI' }
}
repositories {
    mavenCentral()
}

def getTestTags() {
    return project.hasProperty("tags") ? project.getProperties().get("tags") : ""
}